[{"C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\index.js":"1","C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\App.js":"2","C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\store.js":"3","C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\actions\\auth.js":"4","C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\utils\\setAuthToken.js":"5","C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\components\\layout\\Navbar.js":"6","C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\components\\layout\\Alert.js":"7","C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\components\\layout\\Landing.js":"8","C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\components\\auth\\Login.js":"9","C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\components\\auth\\Register.js":"10","C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\actions\\types.js":"11","C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\actions\\alert.js":"12","C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\reducers\\index.js":"13","C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\reducers\\alert.js":"14","C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\reducers\\auth.js":"15","C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\components\\dashboard\\Dashboard.js":"16","C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\components\\common\\Spinner.js":"17","C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\components\\common\\PrivateRoute.js":"18","C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\actions\\profile.js":"19","C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\reducers\\profile.js":"20","C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\components\\dashboard\\DashboardActions.js":"21","C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\components\\profile-forms\\CreateProfile.js":"22","C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\components\\profile-forms\\EditProfile.js":"23","C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\components\\profile-forms\\AddExperience.js":"24","C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\components\\profile-forms\\AddEducation.js":"25","C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\components\\dashboard\\Experience.js":"26","C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\components\\dashboard\\Education.js":"27","C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\components\\profiles\\Profiles.js":"28","C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\components\\profiles\\ProfileItem.js":"29"},{"size":207,"mtime":1612844700735,"results":"30","hashOfConfig":"31"},{"size":2454,"mtime":1613045153614,"results":"32","hashOfConfig":"31"},{"size":395,"mtime":1612844700738,"results":"33","hashOfConfig":"31"},{"size":2083,"mtime":1612933866716,"results":"34","hashOfConfig":"31"},{"size":253,"mtime":1612844700738,"results":"35","hashOfConfig":"31"},{"size":1482,"mtime":1613045059001,"results":"36","hashOfConfig":"31"},{"size":507,"mtime":1612844700731,"results":"37","hashOfConfig":"31"},{"size":1156,"mtime":1612933119445,"results":"38","hashOfConfig":"31"},{"size":1980,"mtime":1613037929805,"results":"39","hashOfConfig":"31"},{"size":2871,"mtime":1612844700730,"results":"40","hashOfConfig":"31"},{"size":977,"mtime":1613043560711,"results":"41","hashOfConfig":"31"},{"size":351,"mtime":1612844700729,"results":"42","hashOfConfig":"31"},{"size":206,"mtime":1612931101952,"results":"43","hashOfConfig":"31"},{"size":394,"mtime":1612844700736,"results":"44","hashOfConfig":"31"},{"size":1123,"mtime":1613019189620,"results":"45","hashOfConfig":"31"},{"size":1979,"mtime":1613019903420,"results":"46","hashOfConfig":"31"},{"size":303,"mtime":1612933106739,"results":"47","hashOfConfig":"31"},{"size":617,"mtime":1612846051773,"results":"48","hashOfConfig":"31"},{"size":5759,"mtime":1613043521644,"results":"49","hashOfConfig":"31"},{"size":1099,"mtime":1613043677444,"results":"50","hashOfConfig":"31"},{"size":655,"mtime":1612941613678,"results":"51","hashOfConfig":"31"},{"size":6106,"mtime":1612942915270,"results":"52","hashOfConfig":"31"},{"size":8272,"mtime":1612944114245,"results":"53","hashOfConfig":"31"},{"size":2944,"mtime":1612951105686,"results":"54","hashOfConfig":"31"},{"size":2998,"mtime":1612951347646,"results":"55","hashOfConfig":"31"},{"size":1432,"mtime":1613018691847,"results":"56","hashOfConfig":"31"},{"size":1417,"mtime":1613018705276,"results":"57","hashOfConfig":"31"},{"size":1330,"mtime":1613045837871,"results":"58","hashOfConfig":"31"},{"size":232,"mtime":1613045894057,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1wnboog",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\index.js",[],["129","130"],"C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\App.js",[],"C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\store.js",[],"C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\actions\\auth.js",[],"C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\components\\layout\\Navbar.js",[],"C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\components\\layout\\Alert.js",[],"C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\components\\layout\\Landing.js",[],"C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\components\\auth\\Login.js",[],"C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\components\\auth\\Register.js",[],"C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\actions\\types.js",[],"C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\actions\\alert.js",[],"C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\reducers\\index.js",[],"C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\reducers\\alert.js",["131"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\reducers\\auth.js",["132"],"import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload,\r\n      };\r\n\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem('token', payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\components\\dashboard\\Dashboard.js",["133"],"import React, { Fragment, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getCurrentProfile, deleteAccount } from \"../../actions/profile\";\r\nimport Spinner from \"../common/Spinner\";\r\nimport DashboardActions from \"./DashboardActions\";\r\nimport Experience from \"./Experience\";\r\nimport Education from \"./Education\";\r\n\r\nconst Dashboard = ({\r\n  getCurrentProfile,\r\n  deleteAccount,\r\n  auth: { user },\r\n  profile: { profile, loading },\r\n}) => {\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n  }, []);\r\n  return loading && profile === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Dashboard</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i>\r\n        Welcome {user && user.name}\r\n      </p>\r\n      {profile !== null ? (\r\n        <Fragment>\r\n          <DashboardActions />\r\n          <Experience experience={profile.experience} />\r\n          <Education education={profile.education} />\r\n\r\n          <div className=\"my-2\">\r\n            <button className=\"btn btn-danger\" onClick={() => deleteAccount()}>\r\n              <i className=\"fas fa-uses-minus\"></i>\r\n              Delete My Account\r\n            </button>\r\n          </div>\r\n        </Fragment>\r\n      ) : (\r\n        <Fragment>\r\n          <p>you have not setup a profile</p>\r\n          <Link to=\"/create-profile\" className=\"btn btn-primary my-1\">\r\n            Setup your Profile\r\n          </Link>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  deleteAccount: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(\r\n  Dashboard\r\n);\r\n","C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\components\\common\\Spinner.js",["134"],"import React,{Fragment} from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\n\r\n\r\nexport default () => {\r\n  return (\r\n    <Fragment>\r\n      <img\r\n        src={spinner}\r\n        style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n        alt=\"Loading...\"\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n","C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\components\\common\\PrivateRoute.js",[],"C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\actions\\profile.js",["135","136"],"C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\reducers\\profile.js",["137","138","139"],"C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\components\\dashboard\\DashboardActions.js",[],"C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\components\\profile-forms\\CreateProfile.js",["140"],"import React, {Fragment, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link,withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { createProfile } from '../../actions/profile';\r\n\r\n\r\nconst CreateProfile=({createProfile,history})=>{\r\n\r\n  const[formData,setFormData]=useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: '',\r\n  });\r\nconst {\r\n  company,\r\n  website,\r\n  location,\r\n  status,\r\n  skills,\r\n  githubusername,\r\n  bio,\r\n  twitter,\r\n  facebook,\r\n  linkedin,\r\n  youtube,\r\n  instagram,\r\n}=formData;\r\n\r\n\r\nconst [displaySocialInputs,toggleSocialInputs]=useState(false);\r\nconst onChange=e=>setFormData({...formData,[e.target.name]:e.target.value})\r\n\r\nconst onSubmit=e=>{\r\n    e.preventDefault();\r\n    createProfile(formData,history,true);\r\n\r\n}\r\n\r\n\r\n\r\n\r\nreturn(\r\n\r\n  <Fragment>\r\n      <h1 className=\"large text-primary\">\r\n        Create Your Profile\r\n      </h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required fields</small>\r\n      <form className=\"form\" onSubmit={e=>onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <select name=\"status\" value={status} onChange={e=>onChange(e)}>\r\n            <option value=\"0\">* Select Professional Status</option>\r\n            <option value=\"Developer\">Developer</option>\r\n            <option value=\"Junior Developer\">Junior Developer</option>\r\n            <option value=\"Senior Developer\">Senior Developer</option>\r\n            <option value=\"Manager\">Manager</option>\r\n            <option value=\"Student or Learning\">Student or Learning</option>\r\n            <option value=\"Instructor\">Instructor or Teacher</option>\r\n            <option value=\"Intern\">Intern</option>\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n          <small className=\"form-text\"\r\n            >Give us an idea of where you are at in your career</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company}\r\n          onChange={e=>onChange(e)}\r\n          />\r\n          <small className=\"form-text\"\r\n            >Could be your own company or one you work for</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Website\" name=\"website\"  value={website}\r\n          onChange={e=>onChange(e)}/>\r\n          <small className=\"form-text\"\r\n            >Could be your own or a company website</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Location\" name=\"location\"  value={location}\r\n          onChange={e=>onChange(e)} />\r\n          <small className=\"form-text\"\r\n            >City & state suggested (eg. Boston, MA)</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Skills\" name=\"skills\"  value={skills}\r\n          onChange={e=>onChange(e)}/>\r\n          <small className=\"form-text\"\r\n            >Please use comma separated values (eg.\r\n            HTML,CSS,JavaScript,PHP)</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Github Username\"\r\n            name=\"githubusername\"\r\n            value={githubusername}\r\n            onChange={e=>onChange(e)}\r\n          />\r\n          <small className=\"form-text\"\r\n            >If you want your latest repos and a Github link, include your\r\n            username</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea placeholder=\"A short bio of yourself\" name=\"bio\"   value={bio}\r\n            onChange={e=>onChange(e)} ></textarea>\r\n          <small className=\"form-text\">Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className=\"my-2\">\r\n          <button onClick={()=>toggleSocialInputs(!displaySocialInputs)} type=\"button\"  className=\"btn btn-light\">\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (<Fragment>\r\n\r\n        <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-twitter fa-2x\"></i>\r\n          <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" \r\n           value={twitter}\r\n           onChange={e=>onChange(e)} />\r\n        </div>\r\n\r\n        <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-facebook fa-2x\"></i>\r\n          <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\"\r\n           value={facebook}\r\n           onChange={e=>onChange(e)} />\r\n        </div>\r\n\r\n        <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-youtube fa-2x\"></i>\r\n          <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\"\r\n           value={youtube}\r\n           onChange={e=>onChange(e)} />\r\n        </div>\r\n\r\n        <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-linkedin fa-2x\"></i>\r\n          <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\"\r\n           value={linkedin}\r\n           onChange={e=>onChange(e)} />\r\n        </div>\r\n\r\n        <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-instagram fa-2x\"></i>\r\n          <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\"\r\n           value={instagram}\r\n           onChange={e=>onChange(e)} />\r\n        </div>\r\n\r\n        </Fragment>)}\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <a className=\"btn btn-light my-1\" href=\"dashboard.html\">Go Back</a>\r\n      </form>\r\n</Fragment>\r\n\r\n\r\n)}\r\n\r\n\r\n\r\nCreateProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  \r\n};\r\n\r\nexport default connect(null, { createProfile })(withRouter(CreateProfile));\r\n\r\n","C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\components\\profile-forms\\EditProfile.js",["141"],"import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { createProfile, getCurrentProfile } from \"../../actions/profile\";\r\n\r\nconst EditProfile = ({\r\n  profile: { profile, loading },\r\n  createProfile,\r\n  getCurrentProfile,\r\n  history   \r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    company: \"\",\r\n    website: \"\",\r\n    location: \"\",\r\n    status: \"\",\r\n    skills: \"\",\r\n    githubusername: \"\",\r\n    bio: \"\",\r\n    twitter: \"\",\r\n    facebook: \"\",\r\n    linkedin: \"\",\r\n    youtube: \"\",\r\n    instagram: \"\",\r\n  });\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram,\r\n  } = formData;\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n\r\n    setFormData({\r\n      company: loading || !profile.company ? \"\" : profile.company,\r\n      website: loading || !profile.website ? \"\" : profile.website,\r\n      location: loading || !profile.location ? \"\" : profile.location,\r\n      status: loading || !profile.status ? \"\" : profile.status,\r\n      skills: loading || !profile.skills ? \"\" : profile.skills.join(','),\r\n      githubusername:\r\n        loading || !profile.githubusername ? \"\" : profile.githubusername,\r\n      bio: loading || !profile.bio ? \"\" : profile.bio,\r\n      twitter: loading || !profile.social ? \"\" : profile.twitter,\r\n      facebook: loading || !profile.social ? \"\" : profile.facebook,\r\n      linkedin: loading || !profile.social ? \"\" : profile.linkedin,\r\n      youtube: loading || !profile.social ? \"\" : profile.youtube,\r\n      instagram: loading || !profile.social ? \"\" : profile.instagram,\r\n    });\r\n  }, [loading]);\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history, true);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Edit Your Profile</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required fields</small>\r\n      <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <select name=\"status\" value={status} onChange={(e) => onChange(e)}>\r\n            <option value=\"0\">* Select Professional Status</option>\r\n            <option value=\"Developer\">Developer</option>\r\n            <option value=\"Junior Developer\">Junior Developer</option>\r\n            <option value=\"Senior Developer\">Senior Developer</option>\r\n            <option value=\"Manager\">Manager</option>\r\n            <option value=\"Student or Learning\">Student or Learning</option>\r\n            <option value=\"Instructor\">Instructor or Teacher</option>\r\n            <option value=\"Intern\">Intern</option>\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n          <small className=\"form-text\">\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Company\"\r\n            name=\"company\"\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Website\"\r\n            name=\"website\"\r\n            value={website}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Location\"\r\n            name=\"location\"\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Skills\"\r\n            name=\"skills\"\r\n            value={skills}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Github Username\"\r\n            name=\"githubusername\"\r\n            value={githubusername}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            placeholder=\"A short bio of yourself\"\r\n            name=\"bio\"\r\n            value={bio}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n          <small className=\"form-text\">Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className=\"my-2\">\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-twitter fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Twitter URL\"\r\n                name=\"twitter\"\r\n                value={twitter}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-facebook fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Facebook URL\"\r\n                name=\"facebook\"\r\n                value={facebook}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-youtube fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"YouTube URL\"\r\n                name=\"youtube\"\r\n                value={youtube}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-linkedin fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Linkedin URL\"\r\n                name=\"linkedin\"\r\n                value={linkedin}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-instagram fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Instagram URL\"\r\n                name=\"instagram\"\r\n                value={instagram}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link to=\"/dashboard\" className=\"btn btn-light my-1\">\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\r\n  withRouter(EditProfile)\r\n);\r\n","C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\components\\profile-forms\\AddExperience.js",["142"],"import React, { Fragment,useState } from 'react'\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {addExperience} from '../../actions/profile'\r\n\r\n const AddExperience = ({addExperience,history}) => {\r\n    const[formData,setFormData]=useState({\r\n    company: '',\r\n    title: '',\r\n    location: '',\r\n    from: '',\r\n    to: '',\r\n    current:false,\r\n    description: '',\r\n    });\r\n\r\n    const [toDateDisabled,toggleDisabled]=useState(false);\r\n\r\n    const{company,title,location,from,to,current,description}=formData;\r\n\r\n    const onChange=e=>setFormData({...formData,[e.target.name]:e.target.value})\r\n\r\n    return (\r\n     <Fragment>\r\n        <h1 className=\"large text-primary\">\r\n        Add An Experience\r\n      </h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-code-branch\"></i> Add any developer/programming\r\n        positions that you have had in the past\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className=\"form\" onSubmit={e=>{\r\n          e.preventDefault();\r\n          addExperience(formData,history);\r\n\r\n\r\n      }}>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Job Title\" name=\"title\" required value={title} onChange={e=>onChange(e)} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Company\" name=\"company\" required value={company} onChange={e=>onChange(e)}/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e=>onChange(e)}/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>From Date</h4>\r\n          <input type=\"date\" name=\"from\" value={from} onChange={e=>onChange(e)} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>To Date</h4>\r\n          <input type=\"date\" name=\"to\" value={to} \r\n          onChange={e=>onChange(e)}\r\n          disabled={toDateDisabled ? 'disabled':''}/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <p><input type=\"checkbox\" name=\"current\" checked={current} value={current} \r\n          onChange={e=>\r\n          {setFormData({...formData,current:!current});\r\n          toggleDisabled(!toDateDisabled);\r\n          }}/>{' '} Current Job</p>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            name=\"description\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\"Job Description\" value={description} onChange={e=>onChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn my-1\" to=\"/dashboard\">Go Back</Link>\r\n      </form>\r\n      </Fragment>\r\n    )\r\n}\r\n\r\nAddExperience.propTypes={\r\n    addExperience:PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default connect (null,{addExperience}) (AddExperience)","C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\components\\profile-forms\\AddEducation.js",["143"],"import React, { Fragment,useState } from 'react'\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {addEducation} from '../../actions/profile'\r\n\r\n const AddEducation = ({addEducation,history}) => {\r\n    const[formData,setFormData]=useState({\r\n    school: '',\r\n    degree: '',\r\n    fieldofstudy: '',\r\n    from: '',\r\n    to: '',\r\n    current:false,\r\n    description: '',\r\n    });\r\n\r\n    const [toDateDisabled,toggleDisabled]=useState(false);\r\n\r\n    const{school,degree,fieldofstudy,from,to,current,description}=formData;\r\n\r\n    const onChange=e=>setFormData({...formData,[e.target.name]:e.target.value})\r\n\r\n    return (\r\n     <Fragment>\r\n        <h1 className=\"large text-primary\">\r\n        Add Your Education\r\n      </h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-code-branch\"></i> Add any developer/programming\r\n        positions that you have had in the past\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className=\"form\" onSubmit={e=>{\r\n          e.preventDefault();\r\n          addEducation(formData,history);\r\n\r\n\r\n      }}>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* School or bootcamp\" name=\"school\" required value={school} onChange={e=>onChange(e)} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Degrees and certificates\" name=\"degree\" required value={degree} onChange={e=>onChange(e)}/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Selected Field of Study\" name=\"fieldofstudy\" value={fieldofstudy} onChange={e=>onChange(e)}/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>From Date</h4>\r\n          <input type=\"date\" name=\"from\" value={from} onChange={e=>onChange(e)} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>To Date</h4>\r\n          <input type=\"date\" name=\"to\" value={to} \r\n          onChange={e=>onChange(e)}\r\n          disabled={toDateDisabled ? 'disabled':''}/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <p><input type=\"checkbox\" name=\"current\" checked={current} value={current} \r\n          onChange={e=>\r\n          {setFormData({...formData,current:!current});\r\n          toggleDisabled(!toDateDisabled);\r\n          }}/>{' '} Current Job</p>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            name=\"description\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\"Program Description\" value={description} onChange={e=>onChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn my-1\" to=\"/dashboard\">Go Back</Link>\r\n      </form>\r\n      </Fragment>\r\n    )\r\n}\r\n\r\nAddEducation.propTypes={\r\n    addEducation:PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default connect (null,{addEducation}) (AddEducation)","C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\components\\dashboard\\Experience.js",["144"],"import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst Experience = ({ experience }) => {\r\n  const experiences = experience.map((exp) => (\r\n    <tr key={exp._id}>\r\n      <td>{exp.company}</td>\r\n      <td className=\"hide-sm\">{exp.title}</td>\r\n      <td>\r\n        <Moment format=\"YYYY/MM/DD\">{exp.from}</Moment> -{\" \"}\r\n        {exp.to === null ? (\r\n          \" Now\"\r\n        ) : (\r\n          <Moment format=\"YYYY/MM/DD\">{exp.to}</Moment>\r\n        )}\r\n      </td>\r\n      <td>\r\n        <button className=\"btn btn-danger\">Delete</button>\r\n      </td>\r\n    </tr>\r\n  ));\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2 className=\"my-2\">Experience credentials </h2>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Company</th>\r\n            <th className=\"hide-sm\">Title</th>\r\n            <th className=\"hide-sm\">Years</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{experiences}</tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nExperience.propTypes = {\r\n  experience: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Experience;\r\n","C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\components\\dashboard\\Education.js",["145"],"import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst Education = ({ education }) => {\r\n  const educations = education.map((edu) => (\r\n    <tr key={edu._id}>\r\n      <td>{edu.school}</td>\r\n      <td className=\"hide-sm\">{edu.degree}</td>\r\n      <td>\r\n        <Moment format=\"YYYY/MM/DD\">{edu.from}</Moment> -{\" \"}\r\n        {edu.to === null ? (\r\n          \" Now\"\r\n        ) : (\r\n          <Moment format=\"YYYY/MM/DD\">{edu.to}</Moment>\r\n        )}\r\n      </td>\r\n      <td>\r\n        <button className=\"btn btn-danger\">Delete</button>\r\n      </td>\r\n    </tr>\r\n  ));\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2 className=\"my-2\">Education credentials </h2>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>School</th>\r\n            <th className=\"hide-sm\">Title</th>\r\n            <th className=\"hide-sm\">Years</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{educations}</tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEducation.propTypes = {\r\n  education: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Education;\r\n","C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\components\\profiles\\Profiles.js",["146","147","148"],"C:\\Users\\Revo Tech\\Desktop\\react\\snapcode\\client\\src\\components\\profiles\\ProfileItem.js",["149","150"],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":4,"column":1,"nodeType":"157","endLine":14,"endColumn":2},{"ruleId":"155","severity":1,"message":"156","line":18,"column":1,"nodeType":"157","endLine":53,"endColumn":2},{"ruleId":"158","severity":1,"message":"159","line":19,"column":6,"nodeType":"160","endLine":19,"endColumn":8,"suggestions":"161"},{"ruleId":"155","severity":1,"message":"162","line":6,"column":1,"nodeType":"157","endLine":16,"endColumn":3},{"ruleId":"163","severity":1,"message":"164","line":93,"column":33,"nodeType":"165","messageId":"166","endLine":93,"endColumn":62},{"ruleId":"167","severity":1,"message":"168","line":223,"column":13,"nodeType":"169","messageId":"170","endLine":223,"endColumn":16},{"ruleId":"167","severity":1,"message":"171","line":3,"column":3,"nodeType":"169","messageId":"170","endLine":3,"endColumn":18},{"ruleId":"167","severity":1,"message":"172","line":4,"column":3,"nodeType":"169","messageId":"170","endLine":4,"endColumn":24},{"ruleId":"155","severity":1,"message":"156","line":19,"column":1,"nodeType":"157","endLine":58,"endColumn":2},{"ruleId":"167","severity":1,"message":"173","line":3,"column":10,"nodeType":"169","messageId":"170","endLine":3,"endColumn":14},{"ruleId":"158","severity":1,"message":"174","line":62,"column":6,"nodeType":"160","endLine":62,"endColumn":15,"suggestions":"175"},{"ruleId":"167","severity":1,"message":"176","line":2,"column":15,"nodeType":"169","messageId":"170","endLine":2,"endColumn":25},{"ruleId":"167","severity":1,"message":"176","line":2,"column":15,"nodeType":"169","messageId":"170","endLine":2,"endColumn":25},{"ruleId":"167","severity":1,"message":"177","line":3,"column":10,"nodeType":"169","messageId":"170","endLine":3,"endColumn":17},{"ruleId":"167","severity":1,"message":"177","line":3,"column":10,"nodeType":"169","messageId":"170","endLine":3,"endColumn":17},{"ruleId":"167","severity":1,"message":"178","line":5,"column":23,"nodeType":"169","messageId":"170","endLine":5,"endColumn":31},{"ruleId":"167","severity":1,"message":"179","line":5,"column":33,"nodeType":"169","messageId":"170","endLine":5,"endColumn":40},{"ruleId":"158","severity":1,"message":"180","line":11,"column":6,"nodeType":"160","endLine":11,"endColumn":8,"suggestions":"181"},{"ruleId":"167","severity":1,"message":"182","line":2,"column":8,"nodeType":"169","messageId":"170","endLine":2,"endColumn":17},{"ruleId":"167","severity":1,"message":"173","line":3,"column":10,"nodeType":"169","messageId":"170","endLine":3,"endColumn":14},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["185"],"Assign arrow function to a variable before exporting as module default","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","'PROFILE_LOADING' is defined but never used.","'CLEAR_CURRENT_PROFILE' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.bio', 'profile.company', 'profile.facebook', 'profile.githubusername', 'profile.instagram', 'profile.linkedin', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', 'profile.twitter', 'profile.website', and 'profile.youtube'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["186"],"'withRouter' is defined but never used.","'connect' is defined but never used.","'profiles' is defined but never used.","'loading' is defined but never used.","React Hook useEffect has a missing dependency: 'getProfiles'. Either include it or remove the dependency array. If 'getProfiles' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["187"],"'PropTypes' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"194","text":"195"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.facebook, profile.githubusername, profile.instagram, profile.linkedin, profile.location, profile.skills, profile.social, profile.status, profile.twitter, profile.website, profile.youtube]",{"range":"196","text":"197"},"Update the dependencies array to be: [getProfiles]",{"range":"198","text":"199"},[597,599],"[getCurrentProfile]",[1869,1878],"[getCurrentProfile, loading, profile.bio, profile.company, profile.facebook, profile.githubusername, profile.instagram, profile.linkedin, profile.location, profile.skills, profile.social, profile.status, profile.twitter, profile.website, profile.youtube]",[408,410],"[getProfiles]"]